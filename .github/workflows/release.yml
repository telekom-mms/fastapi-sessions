name: New release

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  draft_release:
    runs-on: ubuntu-latest
    name: create release draft
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: calculate next version
        id: version
        uses: patrickjahns/version-drafter-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install poetry
        run: pip install poetry

      - name: Update Version with poetry
        run: poetry version ${{ steps.version.outputs.next-version }}

      - name: Update Version in init
        run: sed -i "s/^__version__ = \".*\"/__version__ = \"${{ steps.version.outputs.next-version }}\"/g" fastapi_sessions/__init__.py

      - name: Update Version in setup.py
        run: sed -i "s/version=\".*\"/version=\"${{ steps.version.outputs.next-version }}\"/g" setup.py

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          future_release: ${{ steps.version.outputs.next-version }}

      - name: push new version
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: 'update version'
          force-add: 'true'
          files: pyproject.toml fastapi_sessions/__init__.py setup.py CHANGELOG.md
          name: Deutsche Telekom MMS GmbH
          email: mms@telekom.de
          rebase: true

      - uses: actions/checkout@v3
        with:
          ref: master

      - uses: release-drafter/release-drafter@v5
        with:
          version: ${{ steps.version.outputs.next-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
